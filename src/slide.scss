@use "./base.scss" as *;
@use "./_variables" as *;



.#{$transition-class-base} {
  &.#{$transition-class-base}-slide {
    --#{$transition-class-base}-properties: transform;


    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-transition},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-finalize} {
      transform: translate(calc(100% * var(--#{$transition-class-base}-slide-target-x, 0)), calc(100% * var(--#{$transition-class-base}-slide-target-y, 0)));

      @media (prefers-reduced-motion) {
        transform: none;
      }
    }



    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-transition},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-finalize} {
      transform: translate(0, 0);
    }







    // Handle converting all our inline and block values to the X and Y coordinates most other CSS expects
    --#{$transition-class-base}-origin-x: calc(0 + var(--#{$transition-class-base}-origin-inline));
    --#{$transition-class-base}-origin-y: calc(0 + var(--#{$transition-class-base}-origin-block));

    &.#{$transition-class-base}-inline-direction-ltr {
      --#{$transition-class-base}-slide-target-x: calc(1 * var(--#{$transition-class-base}-slide-target-inline));
    }

    &.#{$transition-class-base}-inline-direction-rtl {
      --#{$transition-class-base}-slide-target-x: calc(-1 * var(--#{$transition-class-base}-slide-target-inline));
    }

    &.#{$transition-class-base}-block-direction-ttb {
      --#{$transition-class-base}-slide-target-y: calc(1 * var(--#{$transition-class-base}-slide-target-block));
    }

    &.#{$transition-class-base}-block-direction-btt {
      --#{$transition-class-base}-slide-target-y: calc(-1 * var(--#{$transition-class-base}-slide-target-block));
    }




    &.#{$transition-class-base}-block-direction-ltr {
      --#{$transition-class-base}-slide-target-x: calc(1 * var(--#{$transition-class-base}-slide-target-block));
    }

    &.#{$transition-class-base}-block-direction-rtl {
      --#{$transition-class-base}-slide-target-x: calc(-1 * var(--#{$transition-class-base}-slide-target-block));
    }

    &.#{$transition-class-base}-inline-direction-ttb {
      --#{$transition-class-base}-slide-target-y: calc(1 * var(--#{$transition-class-base}-slide-target-inline));
    }

    &.#{$transition-class-base}-inline-direction-btt {
      --#{$transition-class-base}-slide-target-y: calc(-1 * var(--#{$transition-class-base}-slide-target-inline));
    }
  }
}