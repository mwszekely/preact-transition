@use "sass:list";
@use "./_variables" as *;

// Everything is wrapped in an extra selector in an attempt to improve specificty slightly
// over anything with just a single-selector transition (e.g. a lot of Bootstrap transitions)
.#{$transition-class-base} {

    // Fun fact: the initial value of transition-property is `all`, not `none`.
    // Which, uh, that's annoying. It means all sorts of other things like z-index and visiblity and display
    // will just suddenly start animating themselves.
    // Also IMPORTANT TO NOTE!
    // If the variable doesn't resolve to a proper, comma separated list of properties
    // (i.e. it would make the `transition-property` have an invalid value)
    // it will, once again, default to `all`, so we have this out here to counteract that.
    transition-property: none;

    &.#{$transition-class-base}-#{$transition-class-enter},
    &.#{$transition-class-base}-#{$transition-class-exit} {

        transition-property: var(--#{$transition-class-base}-properties, none);
        transition-duration: var(--#{$transition-class-base}-duration, #{$transition-default-duration});
        // We're going to be animating opacity a lot, 
        // so let's just be proactive about weird graphical glitches during transitions
        // because a new layer was suddenly created. This stops the "was suddenly created" problem.
        isolation: isolate;
    }


    &.#{$transition-class-base}-#{$transition-class-enter} {
        transition-timing-function: var(--#{$transition-class-base}-#{$transition-class-enter}-timing-function, #{$transition-default-timing-function-in});
    }

    &.#{$transition-class-base}-#{$transition-class-exit} {
        transition-timing-function: var(--#{$transition-class-base}-#{$transition-class-exit}-timing-function, #{$transition-default-timing-function-out});
    }

    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-finalize} {
        // Make sure that the mouse is never blocked by a hidden transition.
        // (TODO: Too opinionated to have globally?
        // It's meant to cover the case of "keep this visible for ATs without display: none")
        pointer-events: none;
    }

    &.#{$transition-class-base}-ev-hidden {

        &.#{$transition-class-base}-#{$transition-class-exit}.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-finalize},
        &.#{$transition-class-base}-pending {
            visibility: hidden;
        }
    }

    &.#{$transition-class-base}-ev-removed {

        &.#{$transition-class-base}-#{$transition-class-exit}.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-finalize},
        &.#{$transition-class-base}-pending {
            display: none;
        }
    }

    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-measure},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-measure},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-init} {
        transition: none !important;
    }

}


@media (prefers-reduced-motion) {
    // When this media query is active, 
    // override all other transitions with just a simple opacity transition.
    .#{$transition-class-base} {
        --#{$transition-class-base}-properties: opacity !important;
    }
}