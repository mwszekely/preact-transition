@use "./base.scss" as *;
@use "./_variables" as *;


.#{$transition-class-base} {
  &.#{$transition-class-base}-flip {
    backface-visibility: hidden;
    --#{$transition-class-base}-properties: transform;

    // Set the transform origin regardless of what phase we're in
    transform-origin: calc(var(--#{$transition-class-base}-flip-origin-x) * 100%) calc(var(--#{$transition-class-base}-flip-origin-y) * 100%);

    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-transition},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-finalize} {
      transform: perspective(var(--#{$transition-class-base}-perspective, 800px)) rotate3d(1, 0, 0, calc(var(--#{$transition-class-base}-flip-angle-x, 0))) rotate3d(0, 1, 0, calc(var(--#{$transition-class-base}-flip-angle-y, 0)));

      @media (prefers-reduced-motion) {
        transform: none;
      }
    }



    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-transition},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-finalize} {
      transform: perspective(var(--#{$transition-class-base}-perspective, 800px)) rotate3d(1, 0, 0, 0deg) rotate3d(0, 1, 0, 0deg);
    }







    // Handle converting all our inline and block values to the X and Y coordinates most other CSS expects
    --#{$transition-class-base}-flip-origin-x: calc(0 + var(--#{$transition-class-base}-flip-origin-inline));
    --#{$transition-class-base}-flip-origin-y: calc(0 + var(--#{$transition-class-base}-flip-origin-block));

    &.#{$transition-class-base}-inline-direction-ltr {
      --#{$transition-class-base}-flip-angle-x: calc(1 * var(--#{$transition-class-base}-flip-angle-inline));
    }

    &.#{$transition-class-base}-inline-direction-rtl {
      --#{$transition-class-base}-flip-angle-x: calc(-1 * var(--#{$transition-class-base}-flip-angle-inline));
    }

    &.#{$transition-class-base}-block-direction-ttb {
      --#{$transition-class-base}-flip-angle-y: calc(1 * var(--#{$transition-class-base}-flip-angle-block));
    }

    &.#{$transition-class-base}-block-direction-btt {
      --#{$transition-class-base}-flip-angle-y: calc(-1 * var(--#{$transition-class-base}-flip-angle-block));
    }




    &.#{$transition-class-base}-block-direction-ltr {
      --#{$transition-class-base}-flip-angle-x: calc(1 * var(--#{$transition-class-base}-flip-angle-block));
    }

    &.#{$transition-class-base}-block-direction-rtl {
      --#{$transition-class-base}-flip-angle-x: calc(-1 * var(--#{$transition-class-base}-flip-angle-block));
    }

    &.#{$transition-class-base}-inline-direction-ttb {
      --#{$transition-class-base}-flip-angle-y: calc(1 * var(--#{$transition-class-base}-flip-angle-inline));
    }

    &.#{$transition-class-base}-inline-direction-btt {
      --#{$transition-class-base}-flip-angle-y: calc(-1 * var(--#{$transition-class-base}-flip-angle-inline));
    }
  }
}