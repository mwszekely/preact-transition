@use "./base.scss" as *;
@use "./_variables" as *;

.#{$transition-class-base} {
  &.#{$transition-class-base}-clip {
    --#{$transition-class-base}-properties: clip-path;

    overflow: hidden;

    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-transition},
    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-finalize} {


      // This is the actual clip property.
      // We need all the above boilerplate to convert inline & block values to clip-path's non-logical-style offsets.
      clip-path: inset(
        /* Position from the top = (originY * (1 - minY) */
        calc(100% * (0 + var(--#{$transition-class-base}-clip-origin-y)) * calc(1 - var(--#{$transition-class-base}-clip-min-y)))
        /* Position from the right = ((1 - originX) * (1 - minX)) */
        calc(100% * (1 - var(--#{$transition-class-base}-clip-origin-x)) * calc(1 - var(--#{$transition-class-base}-clip-min-x)))
        /* Position from the bottom = ((1 - originY) * (1 - minY)) */
        calc(100% * (1 - var(--#{$transition-class-base}-clip-origin-y)) * calc(1 - var(--#{$transition-class-base}-clip-min-y)))
        /* Position from the left = (originX * (1 - minX)) */
        calc(100% * (0 + var(--#{$transition-class-base}-clip-origin-x)) * calc(1 - var(--#{$transition-class-base}-clip-min-x))));


      @media (prefers-reduced-motion) {
        clip-path: none;
      }

      &.#{$transition-class-base}-clip-ellipse {
        clip-path: ellipse(calc(100% * var(--#{$transition-class-base}-clip-min-x)) calc(100% * var(--#{$transition-class-base}-clip-min-y)) at calc(100% * var(--#{$transition-class-base}-clip-origin-x)) calc(100% * var(--#{$transition-class-base}-clip-origin-y)));

        @media (prefers-reduced-motion) {
          clip-path: none;
        }
      }

    }

    &.#{$transition-class-base}-#{$transition-class-exit}-#{$transition-class-init},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-transition},
    &.#{$transition-class-base}-#{$transition-class-enter}-#{$transition-class-finalize} {
      clip-path: inset(0 0 0 0);

      &.clip-ellipse {
        // TODO: Better math to estimate an ideal size, 
        // or a new ClipEllipse component that doesn't accept an origin.
        clip-path: ellipse(71% 71% at calc(100% * var(--#{$transition-class-base}-clip-origin-x)) calc(100% * var(--#{$transition-class-base}-clip-origin-y)))
      }

    }








    // Handle converting all our inline and block values to the X and Y coordinates most other CSS expects
    --#{$transition-class-base}-clip-min-x: calc(0 + var(--#{$transition-class-base}-clip-min-inline));
    --#{$transition-class-base}-clip-min-y: calc(0 + var(--#{$transition-class-base}-clip-min-block));
    --#{$transition-class-base}-clip-origin-x: calc(0 + var(--#{$transition-class-base}-clip-origin-inline));

    &.#{$transition-class-base}-inline-direction-ltr,
    &.#{$transition-class-base}-inline-direction-rtl,
    &.#{$transition-class-base}-block-direction-ttb,
    &.#{$transition-class-base}-block-direction-btt {
      --#{$transition-class-base}-clip-min-x: calc(0 + var(--#{$transition-class-base}-clip-min-inline));
      --#{$transition-class-base}-clip-min-y: calc(0 + var(--#{$transition-class-base}-clip-min-block));
    }

    &.#{$transition-class-base}-inline-direction-ltr {
      --#{$transition-class-base}-clip-origin-x: calc(0 + var(--#{$transition-class-base}-clip-origin-inline));
    }

    &.#{$transition-class-base}-inline-direction-rtl {
      --#{$transition-class-base}-clip-origin-x: calc(1 - var(--#{$transition-class-base}-clip-origin-inline));
    }

    &.#{$transition-class-base}-block-direction-ttb {
      --#{$transition-class-base}-clip-origin-y: calc(0 + var(--#{$transition-class-base}-clip-origin-block));
    }

    &.#{$transition-class-base}-block-direction-btt {
      --#{$transition-class-base}-clip-origin-y: calc(1 - var(--#{$transition-class-base}-clip-origin-block));
    }



    &.#{$transition-class-base}-block-direction-ltr,
    &.#{$transition-class-base}-block-direction-rtl,
    &.#{$transition-class-base}-inline-direction-ttb,
    &.#{$transition-class-base}-inline-direction-btt {
      --#{$transition-class-base}-clip-min-x: calc(0 + var(--#{$transition-class-base}-clip-min-block));
      --#{$transition-class-base}-clip-min-y: calc(0 + var(--#{$transition-class-base}-clip-min-inline));
    }



    &.#{$transition-class-base}-block-direction-ltr {
      --#{$transition-class-base}-clip-origin-x: calc(0 + var(--#{$transition-class-base}-clip-origin-block));
    }

    &.#{$transition-class-base}-block-direction-rtl {
      --#{$transition-class-base}-clip-origin-x: calc(1 - var(--#{$transition-class-base}-clip-origin-block));
    }

    &.#{$transition-class-base}-inline-direction-ttb {
      --#{$transition-class-base}-clip-origin-y: calc(0 + var(--#{$transition-class-base}-clip-origin-inline));
    }

    &.#{$transition-class-base}-inline-direction-btt {
      --#{$transition-class-base}-clip-origin-y: calc(1 - var(--#{$transition-class-base}-clip-origin-inline));
    }

  }
}